{
    "Functions": {
        "description": "Blocks of reusable code that perform specific tasks",
        "syntax": {
            "basic": {
                "syntax": "return_type function_name(parameters) {\n    // function body\n}",
                "description": "Basic function definition",
                "example": "int add(int a, int b) {\n    return a + b;\n}"
            },
            "void": {
                "syntax": "void function_name(parameters) {\n    // function body\n}",
                "description": "Function that doesn't return a value",
                "example": "void print_hello() {\n    printf(\"Hello\");\n}"
            },
            "parameters": {
                "syntax": "type1 param1, type2 param2, ...",
                "description": "Function parameters with types",
                "example": "float calculate(int count, float price)"
            },
            "function_pointer": {
                "syntax": "return_type (*pointer_name)(parameter_types)",
                "description": "Pointer to function",
                "example": "void (*fp)(int) = &handler;"
            }
        }
    },
    "Built-in Functions": {
        "description": "Standard library functions in C",
        "categories": {
            "Input/Output": {
                "description": "Functions for input and output operations",
                "functions": [
                    {"name": "printf()", "description": "Print formatted output to stdout"},
                    {"name": "scanf()", "description": "Read formatted input from stdin"},
                    {"name": "getchar()", "description": "Read single character from stdin"},
                    {"name": "putchar()", "description": "Write single character to stdout"},
                    {"name": "gets()", "description": "Read string from stdin (deprecated)"},
                    {"name": "puts()", "description": "Write string to stdout"},
                    {"name": "fprintf()", "description": "Print formatted output to stream"},
                    {"name": "fscanf()", "description": "Read formatted input from stream"},
                    {"name": "fgets()", "description": "Read string from stream"},
                    {"name": "fputs()", "description": "Write string to stream"}
                ]
            },
            "String Handling": {
                "description": "Functions for string manipulation",
                "functions": [
                    {"name": "strlen()", "description": "Get string length"},
                    {"name": "strcpy()", "description": "Copy string"},
                    {"name": "strcat()", "description": "Concatenate strings"},
                    {"name": "strcmp()", "description": "Compare strings"},
                    {"name": "strncpy()", "description": "Copy n characters from string"},
                    {"name": "strncat()", "description": "Concatenate n characters"},
                    {"name": "strchr()", "description": "Find character in string"},
                    {"name": "strstr()", "description": "Find substring in string"}
                ]
            },
            "Memory Management": {
                "description": "Functions for dynamic memory allocation",
                "functions": [
                    {"name": "malloc()", "description": "Allocate memory block"},
                    {"name": "calloc()", "description": "Allocate and zero memory block"},
                    {"name": "realloc()", "description": "Reallocate memory block"},
                    {"name": "free()", "description": "Free allocated memory"},
                    {"name": "memcpy()", "description": "Copy memory block"},
                    {"name": "memmove()", "description": "Move memory block"},
                    {"name": "memset()", "description": "Fill memory with constant byte"}
                ]
            },
            "Math": {
                "description": "Mathematical functions",
                "functions": [
                    {"name": "abs()", "description": "Absolute value"},
                    {"name": "sqrt()", "description": "Square root"},
                    {"name": "pow()", "description": "Power function"},
                    {"name": "ceil()", "description": "Round up to nearest integer"},
                    {"name": "floor()", "description": "Round down to nearest integer"},
                    {"name": "sin()", "description": "Sine function"},
                    {"name": "cos()", "description": "Cosine function"},
                    {"name": "tan()", "description": "Tangent function"},
                    {"name": "log()", "description": "Natural logarithm"},
                    {"name": "exp()", "description": "Exponential function"}
                ]
            },
            "Type Conversion": {
                "description": "Functions for type conversion",
                "functions": [
                    {"name": "atoi()", "description": "Convert string to integer"},
                    {"name": "atof()", "description": "Convert string to float"},
                    {"name": "atol()", "description": "Convert string to long"},
                    {"name": "strtol()", "description": "String to long with base"},
                    {"name": "strtod()", "description": "String to double"}
                ]
            },
            "Time": {
                "description": "Time and date functions",
                "functions": [
                    {"name": "time()", "description": "Get current time"},
                    {"name": "clock()", "description": "Get processor time"},
                    {"name": "difftime()", "description": "Calculate time difference"},
                    {"name": "localtime()", "description": "Convert time to local time structure"},
                    {"name": "gmtime()", "description": "Convert time to UTC structure"},
                    {"name": "strftime()", "description": "Format time as string"}
                ]
            }
        }
    }
}
